# Notice the v1beta3 version
apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: v1beta3-demo-2
  title: Analyze Application
  description: Analyze an existing application in MTA
spec:
  owner: mta
  type: service
  # these are the steps which are rendered in the frontend with the form input
  parameters:
  - title: Application to analyze
    properties:
      selectedApp:
        title: Select an application
        description: MTA application to analyze
        type: string
        ui:field: EntityPicker
        ui:options:
          allowedKinds: ["component"]
          defaultKind: component
          catalogFilter:
            - spec.type: service
              kind: Component
      selectedTargets:
        title: Select Targets for Analysis
        description: Choose the target platforms for the application analysis
        type: array
        items:
          type: string
          enum: ["eap8", "eap7", "cloud-readiness", "quarkus", "openjdk11", "openjdk17", "openjdk21", "openjdk", "linux", "jakarta-ee", "rhr", "jws6", "openliberty", "camel3", "camel4", "azure-appservice", "azure-aks"]
        ui:field: CheckboxGroup
        ui:options:
          layout: "grid"
      # EntityPicker:
      #   name: 'selectedApp'
      #   title: Select an application
      #   description: MTA application to analyze
      #   type: string
      #   ui:field: EntityPicker
      #   ui:options:
      #     allowedKinds: ["component"]
      #     defaultKind: component
      #     catalogFilter:
      #       - spec.type: service
      #         kind: Component
  # - title: Migration path selection
  #   properties:
  #     repo:
  #       title: Repository Location
  #       type: string

  # here's the steps that are executed in series in the scaffolder backend
  steps:
  - id: runAnalysis
    name: Run Analysis
    action: mta:analyzeApplication
    input: 
      selectedApp: ${{ parameters.selectedApp }}
      selectedTargets: ${{ parameters.selectedTargets }}
  # some outputs which are saved along with the job for use in the frontend
  output:
    links:
      # - title: Repository
      #   url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}